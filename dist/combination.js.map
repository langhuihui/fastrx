{"version":3,"file":"combination.js","sources":["../combination.js"],"sourcesContent":["const {\r\n    Sink, deliver, noop\r\n} = require('./common')\r\nclass Share extends Sink {\r\n    init(source) {\r\n        this.source = source\r\n        this.sinks = new Set()\r\n    }\r\n    add(sink) {\r\n        this.sinks.add(sink)\r\n        if (this.sinks.size === 1) {\r\n            this.source(this)\r\n        }\r\n    }\r\n    remove(sink) {\r\n        this.sinks.delete(sink)\r\n        if (this.sinks.size === 0) {\r\n            this.defer()\r\n        }\r\n    }\r\n    next(data) {\r\n        this.sinks.forEach(s => s.next(data))\r\n    }\r\n    complete(err) {\r\n        this.sinks.forEach(s => s.complete(err))\r\n        this.sinks.clear()\r\n    }\r\n}\r\nexports.share = () => source => {\r\n    const share = new Share(null, source)\r\n    return sink => {\r\n        sink.defer([share.remove, share, sink])\r\n        share.add(sink);\r\n    }\r\n}\r\nexports.shareReplay = bufferSize => source => {\r\n    const share = new Share(null, source)\r\n    const buffer = []\r\n    share.next = function (data) {\r\n        buffer.push(data)\r\n        if (buffer.length > bufferSize) {\r\n            buffer.shift()\r\n        }\r\n        this.sinks.forEach(s => s.next(data))\r\n    }\r\n    return sink => {\r\n        sink.defer([share.remove, share, this])\r\n        buffer.forEach(cache => sink.next(cache))\r\n        share.add(sink);\r\n    }\r\n}\r\nexports.iif = (condition, trueS, falseS) => sink => condition() ? trueS(sink) : falseS(sink)\r\nclass Race extends Sink {\r\n    init(nLife) {\r\n        this.nLife = nLife;\r\n    }\r\n    next(data) {\r\n        this.defer()\r\n        this.sink.next(data)\r\n        super.complete()\r\n    }\r\n    complete(err) {\r\n        if (--this.nLife === 0) super.complete(err)\r\n    }\r\n}\r\nexports.race = (...sources) => sink => new Race(sink, sources.length).subscribes(sources)\r\nclass Concat extends Sink {\r\n    init(sources) {\r\n        this.sources = sources\r\n        this.pos = 0\r\n        this.len = sources.length\r\n    }\r\n    complete(err) {\r\n        if (err) {\r\n            super.complete(err)\r\n            return\r\n        }\r\n        if (this.pos < this.len && !this.disposed) this.sources[this.pos++](this)\r\n        else super.complete()\r\n    }\r\n}\r\nexports.concat = (...sources) => sink => new Concat(sink, sources).complete()\r\n\r\nclass Merge extends Sink {\r\n    init(nLife) {\r\n        this.nLife = nLife;\r\n    }\r\n    complete() {\r\n        if (--this.nLife === 0) super.complete()\r\n    }\r\n}\r\nexports.mergeArray = sources => sink => new Merge(sink, sources.length).subscribes(sources)\r\nexports.merge = (...sources) => sink => new Merge(sink, sources.length).subscribes(sources)\r\nclass CombineLatest extends Sink {\r\n    init(index, array, context) {\r\n        this.index = index\r\n        this.context = context\r\n        this.state = 0\r\n        this.array = array\r\n    }\r\n    next(data) {\r\n        switch (this.state) {\r\n            case 0:\r\n                ++this.context.nRun;\r\n                this.state = 1\r\n            case 1:\r\n                if (this.context.nRun === this.context.nTotal) {\r\n                    this.state = 2\r\n                } else {\r\n                    this.array[this.index] = data\r\n                    break\r\n                }\r\n            case 2:\r\n                this.array[this.index] = data\r\n                this.sink.next(this.array)\r\n                break\r\n        }\r\n    }\r\n    complete(err) {\r\n        if (err || (--this.context.nLife) === 0) super.complete(err)\r\n    }\r\n}\r\nexports.combineLatest = (...sources) => sink => {\r\n    const nTotal = sources.length;\r\n    const context = {\r\n        nTotal,\r\n        nLife: nTotal,\r\n        nRun: 0\r\n    }\r\n    const array = new Array(nTotal)\r\n    // const defers = new Array(nTotal)\r\n    // for (let i = 0; i < nTotal; ++i) defers[i] = sources[i](new CombineLatest(sink, i, array, context))\r\n    sources.forEach((source, i) => source(new CombineLatest(sink, i, array, context)))\r\n}\r\nclass WithLatestFrom extends Sink {\r\n    init(...sources) {\r\n        this._withLatestFrom = new Sink(this.sink)\r\n        this._withLatestFrom.next = data => this.buffer = data\r\n        this._withLatestFrom.complete = noop\r\n        exports.combineLatest(...sources)(this._withLatestFrom)\r\n    }\r\n    next(data) {\r\n        if (this.buffer) {\r\n            this.sink.next([data].concat(this.buffer))\r\n        }\r\n    }\r\n    complete(err) {\r\n        this._withLatestFrom.dispose()\r\n        super.complete(err)\r\n    }\r\n}\r\nexports.withLatestFrom = deliver(WithLatestFrom)\r\nclass Zip extends Sink {\r\n    init(index, array, context) {\r\n        this.index = index\r\n        this.context = context\r\n        this.array = array\r\n        this.buffer = []\r\n        array[index] = this.buffer\r\n    }\r\n    next(data) {\r\n        this.buffer.push(data)\r\n        if (this.array.every(x => x.length)) {\r\n            this.sink.next(this.array.map(x => x.shift()))\r\n        }\r\n    }\r\n    complete(err) {\r\n        if (err || (--this.context.nLife) === 0) super.complete(err)\r\n    }\r\n}\r\nexports.zip = (...sources) => sink => {\r\n    const nTotal = sources.length;\r\n    const context = {\r\n        nTotal,\r\n        nLife: nTotal\r\n    }\r\n    const array = new Array(nTotal)\r\n    sources.forEach((source, i) => source(new Zip(sink, i, array, context)))\r\n}\r\n\r\nexports.startWith = (...xs) => inputSource => (sink, pos = 0, l = xs.length) => {\r\n    while (pos < l) {\r\n        if (sink.disposed) return\r\n        sink.next(xs[pos++])\r\n    }\r\n    sink.disposed || inputSource(sink)\r\n}"],"names":["require","Sink","deliver","noop","Share","source","sinks","Set","sink","add","size","delete","defer","data","forEach","s","next","err","complete","clear","exports","share","remove","shareReplay","bufferSize","buffer","push","length","shift","cache","iif","condition","trueS","falseS","Race","nLife","race","sources","subscribes","Concat","pos","len","disposed","concat","Merge","mergeArray","merge","CombineLatest","index","array","context","state","nRun","nTotal","combineLatest","Array","i","WithLatestFrom","_withLatestFrom","dispose","withLatestFrom","Zip","every","x","map","zip","startWith","xs","inputSource","l"],"mappings":"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"}